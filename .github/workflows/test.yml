name: Test Pipeline

on:
  push:
    branches:
      - testing-and-web  
  pull_request:
    branches:
      - testing-and-web  

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env
        run: |
          echo "${{ vars.UNIT_TEST_ENV }}" > src/backend/tests/unit/.env
          # ls -al src/backend/
          cat src/backend/tests/unit/.env

      - name: Run unit tests
        run: |
          docker-compose -f src/backend/tests/unit/docker-compose-tests.yml up --abort-on-container-exit --build
          
      - name: Save Allure results from unit tests
        # if: success()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: src/backend/allure-results/

  integration_tests:
    runs-on: ubuntu-latest
    needs: unit_tests
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env
        run: |
          echo "${{ vars.UNIT_TEST_ENV }}" > src/backend/tests/integration/deployment/.env
          # ls -al src/backend/
          cat src/backend/tests/unit/.env

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Run integration tests
        run: |
          docker-compose -f src/backend/tests/integration/deployment/docker-compose-tests.yml up --abort-on-container-exit --build
          
      - name: Save Allure results from integration tests
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: src/backend/allure-results/

  e2e_tests:
    runs-on: ubuntu-latest
    needs: [unit_tests, integration_tests]
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env
        run: |
          echo "${{ vars.E2E_TEST_ENV }}" > src/backend/tests/e2e/deployment/.env
          # ls -al src/backend/
          cat src/backend/tests/unit/.env

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Run e2e tests
        run: |
          docker-compose -f src/backend/tests/e2e/deployment/docker-compose-tests.yml up --abort-on-container-exit --build
          
      - name: Save Allure results from integration tests
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path: src/backend/allure-results/
          
  report:
    runs-on: ubuntu-latest
    needs: [unit_tests, integration_tests, e2e_tests]  
    steps:
      - name: Download Allure results
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          
      - name: Generate Allure Report
        run: |
          allure serve src/backend/allure-results/  
