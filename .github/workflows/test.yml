name: Test Pipeline

on:
  push:
    branches:
      - testing-and-web  
  pull_request:
    branches:
      - testing-and-web  

jobs:
  unit_tests:
    outputs:
      skip: ${{ steps.set_skip.outputs.skip }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create .env
        run: |
          echo "${{ vars.UNIT_TEST_ENV }}" > src/backend/tests/unit/.env
          cat src/backend/tests/unit/.env

      - name: Run unit tests
        run: |
          docker-compose -f src/backend/tests/unit/docker-compose-tests.yml up --abort-on-container-exit --build

      - name: Set Skip
        id: set_skip
        if: failure()
        run: |
          echo "SKIP=true" >> $GITHUB_OUTPUT

      - name: Save Allure results from unit tests
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results-unit
          path: src/backend/allure-results/

  integration_tests:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.set_skip.outputs.skip }}
    needs: unit_tests
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Create .env
        run: |
          echo "${{ vars.UNIT_TEST_ENV }}" > src/backend/tests/integration/deployment/.env
      
      - name: Add skipping flag to integration tests
        id: add_skip
        # env:
        #   SKIP: ${{ needs.unit_tests.outputs.skip }} 
        if: ${{ needs.unit_tests.outputs.skip == 'true' }}
        run: |
          # echo "$SKIP" >> src/backend/tests/integration/deployment/.env
          echo "SKIP=${{ needs.unit_tests.outputs.skip }}" >> src/backend/tests/integration/deployment/.env
          # echo "SKIP=true" >> $GITHUB_OUTPUT
          # cat src/backend/tests/integration/deployment/.env

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run integration tests
        run: |
          docker-compose -f src/backend/tests/integration/deployment/docker-compose-tests.yml up --abort-on-container-exit --build
      
      - name: Set Skip
        id: set_skip
        if: failure() || ${{ needs.unit_tests.outputs.skip == 'true' }}
        run: |
          echo "SKIP=true" >> $GITHUB_OUTPUT
          echo ${{ needs.unit_tests.outputs.skip == 'true' }}
          
      - name: Save Allure results from integration tests
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results-integration
          path: src/backend/allure-results/

  e2e_tests:
    runs-on: ubuntu-latest
    needs: [unit_tests, integration_tests]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env
        run: |
          echo "${{ vars.E2E_TEST_ENV }}" > src/backend/tests/e2e/deployment/.env

      - name: Add skipping flag to integration tests
        # env:
        #   SKIP: ${{ needs.unit_tests.outputs.skip }} 
        if: ${{ needs.integration_tests.outputs.skip == 'true' }}
        run: |
          # echo "$SKIP" >> src/backend/tests/e2e/deployment/.env
          echo "SKIP=${{ needs.integration_tests.outputs.skip }}" >> src/backend/tests/e2e/deployment/.env


      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        uses: KengoTODA/actions-setup-docker-compose@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run e2e tests
        run: |
          docker-compose -f src/backend/tests/e2e/deployment/docker-compose-tests.yml up --abort-on-container-exit --build
          
      - name: Save Allure results from e2e tests
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-results-e2e
          path: src/backend/allure-results/

  combine_allure_results:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [unit_tests, integration_tests, e2e_tests]
    if: always()
    steps:
      - name: Download Allure results from unit tests
        uses: actions/download-artifact@v3
        with:
          name: allure-results-unit
          path: combined-results

      - name: Download Allure results from integration tests
        uses: actions/download-artifact@v3
        with:
          name: allure-results-integration
          path: combined-results

      - name: Download Allure results from e2e tests
        uses: actions/download-artifact@v3
        with:
          name: allure-results-e2e
          path: combined-results
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Install Allure CLI
        run: |
          curl -o allure.zip -sSL https://github.com/allure-framework/allure2/releases/latest/download/allure-2.21.0.zip
          unzip allure.zip -d /usr/local/bin/
          export PATH=$PATH:/usr/local/bin/allure-2.21.0/bin

      - name: Generate Allure Report
        run: |
          allure generate combined-results --clean -o allure-report

      - name: Upload Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report

      - name: Upload combined Allure results
        uses: actions/upload-artifact@v3
        with:
          name: allure-results-combined
          path: combined-results

      # - name: Load test report history
      #   uses: actions/checkout@v3
      #   if: always()
      #   continue-on-error: true
      #   with:
      #     ref: gh-pages
      #     path: gh-pages

      # - name: Build test report
      #   uses: simple-elf/allure-report-action@v1.7
      #   if: always()
      #   with:
      #     gh_pages: gh-pages
      #     allure_history: allure-history
      #     allure_results: combined-results
      
      # - name: Upload Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: allure-results-combined
      #     path: combined-results

      # - name: Publish test report
      #   uses: peaceiris/actions-gh-pages@v3
      #   if: always()
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_branch: gh-pages
      #     publish_dir: allure-history
